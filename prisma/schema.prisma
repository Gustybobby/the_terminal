// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String      @id @default(cuid())
  email             String      @unique
  name              String?
  role              Role        @default(USER)
  airlineRole       AirlineRole @default(Crew)
  terminal          Terminal?   @relation(fields: [terminalId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  terminalId        Int?
  airline           Airline?    @relation(fields: [airlineId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  airlineId         Int?
  lastSecretAttempt DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Terminal {
  id                  Int             @id
  title               String
  description         String
  passengerRate       Int
  unitTime            Int             @default(5)
  game                Game            @default(None)
  staffs              User[]
  capturedBy          Airline?        @relation(fields: [airlineId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  airlineId           Int?
  capturedByRecords   CaptureRecord[]
  lastPassengerUpdate DateTime
  currentFlagSecret   String
}

model Airline {
  id             Int             @id
  title          String          @default("Untitled")
  airlineSecret  String          @unique
  passengers     Int
  class          AirlineClass    @default(None)
  crews          User[]
  captures       Terminal[]
  captureRecords CaptureRecord[]
  recieveEffects Effect[]        @relation(name: "applyBy")
  applyEffects   Effect[]        @relation(name: "applyTo")
}

model CaptureRecord {
  id         Int      @id @default(autoincrement())
  capturedAt DateTime
  terminal   Terminal @relation(fields: [terminalId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  terminalId Int
  airline    Airline  @relation(fields: [airlineId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  airlineId  Int
}

model Effect {
  id        Int          @id @default(autoincrement())
  type      AirlineClass
  from      DateTime
  to        DateTime
  applyBy   Airline      @relation(name: "applyBy", fields: [applyById], references: [id], onUpdate: Restrict, onDelete: Restrict)
  applyById Int
  applyTo   Airline      @relation(name: "applyTo", fields: [applyToId], references: [id], onUpdate: Restrict, onDelete: Restrict)
  applyToId Int
}

enum Role {
  ADMIN
  STAFF
  USER
}

enum AirlineRole {
  Captain
  Crew
  Co_pilot //map to Co-pilot
}

enum AirlineClass {
  CPE
  DE
  ChE
  CE
  IE
  ME
  EE
  BA
  None
}

enum Game {
  Chayen
  Wordle
  None
}
